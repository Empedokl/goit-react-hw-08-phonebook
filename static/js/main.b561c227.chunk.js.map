{"version":3,"sources":["redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/store.js","component/Container/Container.js","views/HomeView/HomeView.js","views/LoginView/LoginView.js","views/RegisterView/RegisterView.js","component/ContactForm/ContactFormStyledComponent.js","component/ContactForm/ContactForm.js","component/Filter/FilterStyledComponents.js","component/Filter/Filter.js","component/Contacts/ContactsStyledComponent.js","component/Contacts/Contacts.js","views/ContactsView/ContactsView.js","component/Navigation/Navigation.js","component/AuthNav/AuthNav.js","component/UserMenu/UserMenu.js","component/AppBar/AppBar.js","component/PrivateRoute.js","component/PublicRoute.js","App.js","index.js","views/RegisterView/RegisterView.module.css","views/LoginView/LoginView.module.css","component/Navigation/Navigation.module.css","component/AuthNav/AuthNav.module.css","views/ContactsView/ContactsView.module.css","views/HomeView/HomeView.module.css","component/UserMenu/UserMenu.module.css","component/Container/Container.module.css","component/AppBar/AppBar.module.css"],"names":["actions","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","operation","addContact","name","number","dispatch","a","contact","action","post","response","data","deleteContact","contactId","delete","fetchContacts","get","getContacts","state","contacts","items","getFilter","filter","selectors","visibleContacts","createSelector","allContacts","toLowerCase","includes","createReducer","_","payload","id","isLoading","combineReducers","token","headers","common","Authorization","register","createAsyncThunk","rejectWithValue","logIn","operations","logOut","fetchCurrentUser","getState","persistedToken","auth","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","getUserEmail","email","authSlice","createSlice","initialState","extraReducers","authOperations","fulfilled","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","container","HomeView","s","title","LoginView","useDispatch","useState","setEmail","password","setPassword","handleChange","target","value","style","FormGroup","onSubmit","e","preventDefault","form","autoComplete","label","type","onChange","required","button","RegisterView","setName","Form","styled","FormLabel","FormInput","input","FormButton","ContactForm","setNumber","useSelector","contactsSelectors","handleInput","some","alert","contactsOperation","placeholder","FilterContainer","Filter","List","ul","ListItem","li","Contacts","map","onClick","ContactsView","props","useEffect","section","wrap","length","Navigation","isloggedIn","to","exact","link","activeClassName","activeLink","AuthNav","UserMenu","IconButton","aria-label","aria-controls","aria-haspopup","color","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","MenuAppBar","classes","AppBar","position","Toolbar","header","PrivateRoute","routeProps","PublicRoute","redirectTo","restricted","shouldRedirect","App","path","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b561c227.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contact/fetchContactRequest');\nconst fetchContactSuccess = createAction('contact/fetchContactSuccess');\nconst fetchContactError = createAction('contact/fetchContactError');\n\nconst addContactRequest = createAction('contact/addContactRequest');\nconst addContactSuccess = createAction('contact/addContactSuccess');\nconst addContactError = createAction('contact/addContactError');\n\nconst deleteContactRequest = createAction('contact/deleteContactRequest');\nconst deleteContactSuccess = createAction('contact/deleteContactSuccess');\nconst deleteContactError = createAction('contact/deleteContactError');\n\nconst changeFilter = createAction('contact/changeFilter');\n\nconst actions = {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n\nexport default actions;\n","import axios from 'axios';\nimport action from './contacts-action';\nconst BASE_URL = 'https://goit-phonebook-api.herokuapp.com/';\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(action.fetchContactRequest());\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(action.fetchContactSuccess(response.data));\n  } catch (error) {\n    dispatch(action.fetchContactError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(action.addContactRequest());\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(action.addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(action.addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(action.deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(action.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(action.deleteContactError(error));\n  }\n};\n\nconst operation = {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n\nexport default operation;\n","import { createSelector } from '@reduxjs/toolkit';\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst visibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) =>\n    allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nconst selectors = {\n  getContacts,\n  getFilter,\n  visibleContacts,\n};\n\nexport default selectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nconst isLoading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n});\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', contact);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', contact);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, { rejectWithValue, getState }) => {\n    const state = getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUserEmail = state => state.auth.user.email;\nconst getUsername = state => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getUserEmail,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import s from './HomeView.module.css';\n\nconst HomeView = () => (\n  <div className={s.container}>\n    <h1 className={s.title}>\n      Телефонная книга\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport style from './LoginView.module.css';\nimport { FormGroup } from '@material-ui/core';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1 className={style.title}>Страница логина</h1>\n\n      <FormGroup>\n        <form onSubmit={handleSubmit} className={style.form} autoComplete=\"off\">\n          <label className={style.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              required\n            />\n          </label>\n\n          <label className={style.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              required\n            />\n          </label>\n\n          <button className={style.button} type=\"submit\">\n            Войти\n          </button>\n        </form>\n      </FormGroup>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport style from './RegisterView.module.css';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1 className={style.title}>Страница регистрации</h1>\n\n      <form onSubmit={handleSubmit} className={style.form} autoComplete=\"off\">\n        <label className={style.label}>\n          Имя\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <label className={style.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <label className={style.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <button className={style.button} type=\"submit\">\n          Зарегистрироваться\n        </button>\n      </form>\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 200px;\n  font-size: 13px;\n  padding: 6px 0 4px 10px;\n  border: 1px solid #ccc;\n  background: #f6f6f6;\n  border-radius: 8px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const FormButton = styled.button`\n  width: 90px;\n  height: 28px;\n  border: 1px solid #ccc;\n  background: #fff;\n  color: #666;\n  border-radius: 5px;\n  box-shadow: inset 0 2px 2px #ccc;\n  background-color: lightgreen;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 2px #ccc;\n  }\n\n  &:active {\n    margin-top: 1px;\n    margin-bottom: -1px;\n    zoom: 1;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactFormStyledComponent';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const handleInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const isContactAlready = () =>\n    contacts?.some(contact => contact.name === name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isContactAlready()) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    dispatch(contactsOperation.addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleInput}\n          placeholder=\"Name*\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"number\"\n          value={number}\n          name=\"number\"\n          onChange={handleInput}\n          placeholder=\"111-11-11*\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.label`\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-action';\nimport { FilterContainer } from './FilterStyledComponents';\nimport { contactsSelectors } from '../../redux/contacts';\n\nfunction Filter() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterContainer>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n      />\n    </FilterContainer>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nimport { List, ListItem } from './ContactsStyledComponent';\n\nfunction Contacts() {\n  const contacts = useSelector(contactsSelectors.visibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ListItem key={id}>\n            <span>{name}:</span>\n            <span>{number}</span>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(contactsOperation.deleteContact(id))}\n            >\n              Delete\n            </button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nexport default Contacts;\n","import React, { useEffect } from 'react';\nimport ContactForm from '../../component/ContactForm';\nimport Filter from '../../component/Filter';\nimport Contacts from '../../component/Contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nimport style from './ContactsView.module.css';\n\nexport default function ContactsView(props) {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperation.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section className={style.section}>\n      <div className={style.wrap}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div className={style.wrap}>\n        <h2>Contacts</h2>\n        {contacts?.length > 0 && <Filter />}\n        {contacts?.length > 0 && <Contacts />}\n      </div>\n    </section>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport style from './Navigation.module.css';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nconst Navigation = () => {\n  const isloggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        to=\"/\"\n        exact\n        className={style.link}\n        activeClassName={style.activeLink}\n      >\n        Главная\n      </NavLink>\n\n      {isloggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className={style.link}\n          activeClassName={style.activeLink}\n        >\n          Контакти\n        </NavLink>\n      )}\n    </nav>\n  );\n};\nexport default Navigation;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={style.link}\n        activeClassName={style.activeLink}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={style.link}\n        activeClassName={style.activeLink}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n// import defaultAvatar from './default-avatar.png';\nimport style from './UserMenu.module.css';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const email = useSelector(authSelectors.getUserEmail);\n\n  return (\n    <div className={style.container}>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        color=\"inherit\"\n      >\n        <AccountCircle />\n      </IconButton>\n      <span className={style.name}>{email}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { authSelectors } from '../../redux/auth';\nimport { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport style from './AppBar.module.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={style.header}>\n          <Navigation />\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({ children, ...routeProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={'/login'} />}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  redirectTo = '/',\n  restricted = false,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { Switch } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from './redux/auth';\nimport Container from './component/Container';\nimport HomeView from './views/HomeView';\nimport LoginView from './views/LoginView';\nimport RegisterView from './views/RegisterView';\nimport ContactsView from './views/ContactsView';\nimport AppBar from './component/AppBar';\nimport PrivateRoute from './component/PrivateRoute';\nimport PublicRoute from './component/PublicRoute';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Switch>\n        <PublicRoute exact path=\"/\">\n          <HomeView />\n        </PublicRoute>\n        <PublicRoute path=\"/register\" restricted>\n          <RegisterView />\n        </PublicRoute>\n        <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n          <LoginView />\n        </PublicRoute>\n        <PrivateRoute path=\"/contacts\">\n          <ContactsView />\n        </PrivateRoute>\n      </Switch>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__3PLP2\",\"label\":\"RegisterView_label__1K-nU\",\"title\":\"RegisterView_title__kGWgu\",\"button\":\"RegisterView_button__3l_Ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"LoginView_title__2Onfq\",\"form\":\"LoginView_form__TOuDw\",\"label\":\"LoginView_label__1Ln46\",\"button\":\"LoginView_button__1lXZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1drM8\",\"activeLink\":\"Navigation_activeLink__3BK5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__h2wYc\",\"activeLink\":\"AuthNav_activeLink__JHQnj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactsView_section__tfKpl\",\"wrap\":\"ContactsView_wrap__1-sNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeView_container__1F3-3\",\"title\":\"HomeView_title__2hLyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1Nwlh\",\"avatar\":\"UserMenu_avatar__2sgUR\",\"name\":\"UserMenu_name__1rokv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nT9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3u47E\"};"],"sourceRoot":""}